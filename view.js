const mongoConnection = require('../../../utilities/connections');
const responseManager = require('../../../utilities/response.manager');
const constants = require('../../../utilities/constants');
const helper = require('../../../utilities/helper');
const adminsModel = require('../../../models/admins.model');
const studentsModel = require('../../../models/students.model');
const config = require('../../../utilities/config');
const allowedContentTypes = require('../../../utilities/content-types');
const awsCloud = require('../../../utilities/aws');
const mongoose = require('mongoose');
const async = require('async');
exports.savestudent = async (req, res) => {
    res.setHeader('Access-Control-Allow-Headers', 'Content-Type,Authorization');
    res.setHeader('Access-Control-Allow-Origin', '*');
    var { studentid, admissionno, admissiondate, rollno, branchid, mediumid, classid, enrolled_year, student_name, student_countrycode, student_mobile, student_country_wise_contact, student_email, student_gender, student_dob, student_bloodgroup, student_hight, student_weight, father_name, father_countrycode, father_mobile, father_country_wise_contact, father_email, father_occupation, father_qualification, father_address, mother_name, mother_countrycode, mother_mobile, mother_country_wise_contact, mother_email, mother_occupation, mother_qualification, mother_address, student_nationality, student_religion, student_cast, student_cast_category, student_bank_name, student_bank_branch, student_bank_accountno, student_bank_ifsccode, student_address, student_pincode, student_city, student_state, student_country, app_login_countrycode, app_login_mobile, app_login_country_wise_contact, is_detain, yearly_fee, yearly_transportation, payment_structureid, fee_dates, feereminderday, academic_startmonth
    } = req.body;
    if (req.token && mongoose.Types.ObjectId.isValid(req.token.adminId)) {
        if (req.token.database && req.token.database.trim() != '') {
            let primary = mongoConnection.useDb(req.token.database);
            let adminData = await primary.model(constants.MODELS.admins, adminsModel).findById(req.token.adminId).lean();
            if (adminData && adminData != null && adminData.status === true) {
                let havepermission = await config.getPermission(adminData.roleId, 'students', 'insertUpdate', primary);
                if (havepermission) {
                    if (admissionno && admissionno.trim() != '' && admissionno != null && admissionno != undefined) {
                        if (admissiondate && admissiondate.trim() != '' && admissiondate != null && admissiondate != undefined) {
                            if (rollno && rollno.trim() != '' && rollno != null && rollno != undefined) {
                                if (branchid && branchid.trim() != '' && branchid != null && branchid != undefined && mongoose.Types.ObjectId.isValid(branchid)) {
                                    if (mediumid && mediumid.trim() != '' && mediumid != null && mediumid != undefined && mongoose.Types.ObjectId.isValid(mediumid)) {
                                        if (classid && classid.trim() != '' && classid != null && classid != undefined && mongoose.Types.ObjectId.isValid(classid)) {
                                            if (enrolled_year && enrolled_year.trim() != '' && enrolled_year != null && enrolled_year != undefined) {
                                                if (student_name && student_name.trim() != '' && student_name != null && student_name != undefined) {
                                                    if (student_countrycode && student_countrycode.trim() != '' && student_countrycode != null && student_countrycode != undefined) {
                                                        if (student_mobile && student_mobile.trim() != '' && student_mobile != null && student_mobile != undefined) {
                                                            if (student_email && student_email.trim() != '' && student_email != null && student_email != undefined && /^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/.test(student_email)) {
                                                                if (student_gender && student_gender.trim() != '' && student_gender != null && student_gender != undefined) {
                                                                    if (student_dob && student_dob.trim() != '' && student_dob != null && student_dob != undefined) {
                                                                        if (student_bloodgroup && student_bloodgroup.trim() != '' && student_bloodgroup != null && student_bloodgroup != undefined) {
                                                                            if (student_hight && student_hight.trim() != '' && student_hight != null && student_hight != undefined) {
                                                                                if (student_weight && student_weight.trim() != '' && student_weight != null && student_weight != undefined) {
                                                                                    if (father_name && father_name.trim() != '' && father_name != null && father_name != undefined) {
                                                                                        if (father_countrycode && father_countrycode.trim() != '' && father_countrycode != null && father_countrycode != undefined) {
                                                                                            if (father_mobile && father_mobile.trim() != '' && father_mobile != null && father_mobile != undefined) {
                                                                                                if (father_email && father_email.trim() != '' && father_email != null && father_email != undefined && /^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/.test(father_email)) {
                                                                                                    if (father_occupation && father_occupation.trim() != '' && father_occupation != null && father_occupation != undefined) {
                                                                                                        if (father_qualification && father_qualification.trim() != '' && father_qualification != null && father_qualification != undefined) {
                                                                                                            if (father_address && father_address.trim() != '' && father_address != null && father_address != undefined) {
                                                                                                                if (mother_name && mother_name.trim() != '' && mother_name != null && mother_name != undefined) {
                                                                                                                    if (mother_countrycode && mother_countrycode.trim() != '' && mother_countrycode != null && mother_countrycode != undefined) {
                                                                                                                        if (mother_mobile && mother_mobile.trim() != '' && mother_mobile != null && mother_mobile != undefined) {
                                                                                                                            if (mother_email && mother_email.trim() != '' && mother_email != null && mother_email != undefined && /^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/.test(mother_email)) {
                                                                                                                                if (mother_occupation && mother_occupation.trim() != '' && mother_occupation != null && mother_occupation != undefined) {
                                                                                                                                    if (mother_qualification && mother_qualification.trim() != '' && mother_qualification != null && mother_qualification != undefined) {
                                                                                                                                        if (mother_address && mother_address.trim() != '' && mother_address != null && mother_address != undefined) {
                                                                                                                                            if (student_nationality && student_nationality.trim() != '' && student_nationality != null && student_nationality != undefined) {
                                                                                                                                                if (student_religion && student_religion.trim() != '' && student_religion != null && student_religion != undefined) {
                                                                                                                                                    if (student_cast && student_cast.trim() != '' && student_cast != null && student_cast != undefined) {
                                                                                                                                                        if (student_cast_category && student_cast_category.trim() != '' && student_cast_category != null && student_cast_category != undefined) {
                                                                                                                                                            if (student_bank_name && student_bank_name.trim() != '' && student_bank_name != null && student_bank_name != undefined) {
                                                                                                                                                                if (student_bank_branch && student_bank_branch.trim() != '' && student_bank_branch != null && student_bank_branch != undefined) {
                                                                                                                                                                    if (student_bank_accountno && student_bank_accountno.trim() != '' && student_bank_accountno != null && student_bank_accountno != undefined) {
                                                                                                                                                                        if (student_bank_ifsccode && student_bank_ifsccode.trim() != '' && student_bank_ifsccode != null && student_bank_ifsccode != undefined) {
                                                                                                                                                                            if (student_address && student_address.trim() != '' && student_address != null && student_address != undefined) {
                                                                                                                                                                                if (student_pincode && student_pincode.trim() != '' && student_pincode != null && student_pincode != undefined) {
                                                                                                                                                                                    if (student_city && student_city.trim() != '' && student_city != null && student_city != undefined) {
                                                                                                                                                                                        if (student_state && student_state.trim() != '' && student_state != null && student_state != undefined) {
                                                                                                                                                                                            if (student_country && student_country.trim() != '' && student_country != null && student_country != undefined) {
                                                                                                                                                                                                if (app_login_countrycode && app_login_countrycode.trim() != '' && app_login_countrycode != null && app_login_countrycode != undefined) {
                                                                                                                                                                                                    if (app_login_mobile && app_login_mobile.trim() != '' && app_login_mobile != null && app_login_mobile != undefined) {
                                                                                                                                                                                                        if (yearly_fee && !(isNaN(yearly_fee)) && yearly_fee > 0) {
                                                                                                                                                                                                            if (payment_structureid && payment_structureid.trim() != '' && payment_structureid != null && payment_structureid != undefined && mongoose.Types.ObjectId.isValid(payment_structureid)) {
                                                                                                                                                                                                                if (fee_dates && fee_dates.trim() != '' && fee_dates != null && fee_dates != undefined) {
                                                                                                                                                                                                                    fee_dates = JSON.parse(fee_dates);
                                                                                                                                                                                                                    if (fee_dates && Array.isArray(fee_dates) && fee_dates.length > 0) {
                                                                                                                                                                                                                        if (academic_startmonth && !(isNaN(academic_startmonth)) && academic_startmonth > 0) {
                                                                                                                                                                                                                            if (is_detain === 'true' || is_detain === 'false') {
                                                                                                                                                                                                                                let millisecondsPerDay = 24 * 60 * 60 * 1000;
                                                                                                                                                                                                                                let reminderday = 0;
                                                                                                                                                                                                                                let reminderdaytimestamp = 0;
                                                                                                                                                                                                                                if (feereminderday && feereminderday != null && feereminderday != undefined && !isNaN(feereminderday) && parseFloat(feereminderday) > 0) {
                                                                                                                                                                                                                                    let currenttimestamp = Date.now();
                                                                                                                                                                                                                                    reminderday = feereminderday;
                                                                                                                                                                                                                                    reminderdaytimestamp = currenttimestamp + (feereminderday * millisecondsPerDay);
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                if (studentid && studentid.trim() != '' && studentid != null && studentid != undefined && mongoose.Types.ObjectId.isValid(studentid)) {
                                                                                                                                                                                                                                    let checkExist = await primary.model(constants.MODELS.students, studentsModel).findOne({ _id: { $ne: new mongoose.Types.ObjectId(studentid) }, admissionno: admissionno }).lean();
                                                                                                                                                                                                                                    if (checkExist == null) {
                                                                                                                                                                                                                                        let enPassword = await helper.passwordEncryptor(app_login_mobile.toString());
                                                                                                                                                                                                                                        let studentData = await primary.model(constants.MODELS.students, studentsModel).findById(studentid).lean();
                                                                                                                                                                                                                                        let checkfeepaid = studentData.fee_dates.filter((obj) => { return obj.status === 'paid' });
                                                                                                                                                                                                                                        if (req.files) {
                                                                                                                                                                                                                                            let studentphoto = "";
                                                                                                                                                                                                                                            let fatherphoto = "";
                                                                                                                                                                                                                                            let motherphoto = "";
                                                                                                                                                                                                                                            async.forEachSeries(req.files, (file, next_file) => {
                                                                                                                                                                                                                                                (async () => {
                                                                                                                                                                                                                                                    if (file.fieldname == 'studentphoto') {
                                                                                                                                                                                                                                                        if (allowedContentTypes.imagearray.includes(file.mimetype)) {
                                                                                                                                                                                                                                                            let sizeOfImageInMB = parseFloat(parseFloat(file.size) / 1048576);
                                                                                                                                                                                                                                                            if (sizeOfImageInMB <= process.env.MAX_UPLOAD_SIZE_IMAGE) {
                                                                                                                                                                                                                                                                let result = await awsCloud.saveToS3(file.buffer, req.token.adminId.toString(), file.mimetype, 'Students');
                                                                                                                                                                                                                                                                studentphoto += result.data.Key;
                                                                                                                                                                                                                                                                next_file();
                                                                                                                                                                                                                                                            } else {
                                                                                                                                                                                                                                                                return responseManager.badrequest({ message: 'file must be less then or equal ' + process.env.MAX_UPLOAD_SIZE_IMAGE + 'MB, please try again...!' }, res);
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                        } else {
                                                                                                                                                                                                                                                            return responseManager.badrequest({ message: 'Only image file allow...!' }, res);
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                    } else if (file.fieldname == 'fatherphoto') {
                                                                                                                                                                                                                                                        if (allowedContentTypes.imagearray.includes(file.mimetype)) {
                                                                                                                                                                                                                                                            let sizeOfImageInMB = parseFloat(parseFloat(file.size) / 1048576);
                                                                                                                                                                                                                                                            if (sizeOfImageInMB <= process.env.MAX_UPLOAD_SIZE_IMAGE) {
                                                                                                                                                                                                                                                                let result = await awsCloud.saveToS3(file.buffer, req.token.adminId.toString(), file.mimetype, 'Students');
                                                                                                                                                                                                                                                                fatherphoto += result.data.Key;
                                                                                                                                                                                                                                                                next_file();
                                                                                                                                                                                                                                                            } else {
                                                                                                                                                                                                                                                                return responseManager.badrequest({ message: 'file must be less then or equal ' + process.env.MAX_UPLOAD_SIZE_IMAGE + 'MB, please try again...!' }, res);
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                        } else {
                                                                                                                                                                                                                                                            return responseManager.badrequest({ message: 'Only image file allow...!' }, res);
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                    } else if (file.fieldname == 'motherphoto') {
                                                                                                                                                                                                                                                        if (allowedContentTypes.imagearray.includes(file.mimetype)) {
                                                                                                                                                                                                                                                            let sizeOfImageInMB = parseFloat(parseFloat(file.size) / 1048576);
                                                                                                                                                                                                                                                            if (sizeOfImageInMB <= process.env.MAX_UPLOAD_SIZE_IMAGE) {
                                                                                                                                                                                                                                                                let result = await awsCloud.saveToS3(file.buffer, req.token.adminId.toString(), file.mimetype, 'Students');
                                                                                                                                                                                                                                                                motherphoto += result.data.Key;
                                                                                                                                                                                                                                                                next_file();
                                                                                                                                                                                                                                                            } else {
                                                                                                                                                                                                                                                                return responseManager.badrequest({ message: 'file must be less then or equal ' + process.env.MAX_UPLOAD_SIZE_IMAGE + 'MB, please try again...!' }, res);
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                        } else {
                                                                                                                                                                                                                                                            return responseManager.badrequest({ message: 'Only image file allow...!' }, res);
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                })().catch((error) => {
                                                                                                                                                                                                                                                    return responseManager.onError(error, res);
                                                                                                                                                                                                                                                });
                                                                                                                                                                                                                                            }, async () => {
                                                                                                                                                                                                                                                let obj = {
                                                                                                                                                                                                                                                    student_profile: (studentphoto && studentphoto.trim() != '') ? studentphoto : studentData.student_profile,
                                                                                                                                                                                                                                                    admissionno: admissionno,
                                                                                                                                                                                                                                                    admissiondate: admissiondate,
                                                                                                                                                                                                                                                    rollno: parseInt(rollno),
                                                                                                                                                                                                                                                    branchid: new mongoose.Types.ObjectId(branchid),
                                                                                                                                                                                                                                                    mediumid: new mongoose.Types.ObjectId(mediumid),
                                                                                                                                                                                                                                                    classid: new mongoose.Types.ObjectId(classid),
                                                                                                                                                                                                                                                    enrolled_year: enrolled_year,
                                                                                                                                                                                                                                                    student_name: student_name,
                                                                                                                                                                                                                                                    student_countrycode: student_countrycode,
                                                                                                                                                                                                                                                    student_mobile: student_mobile,
                                                                                                                                                                                                                                                    student_country_wise_contact: (student_country_wise_contact) ? JSON.parse(student_country_wise_contact) : {},
                                                                                                                                                                                                                                                    student_email: student_email,
                                                                                                                                                                                                                                                    password: enPassword,
                                                                                                                                                                                                                                                    student_gender: student_gender,
                                                                                                                                                                                                                                                    student_dob: student_dob,
                                                                                                                                                                                                                                                    student_bloodgroup: student_bloodgroup,
                                                                                                                                                                                                                                                    student_hight: student_hight,
                                                                                                                                                                                                                                                    student_weight: student_weight,
                                                                                                                                                                                                                                                    father_photo: (fatherphoto && fatherphoto.trim() != '') ? fatherphoto : studentData.father_photo,
                                                                                                                                                                                                                                                    father_name: father_name,
                                                                                                                                                                                                                                                    father_countrycode: (father_countrycode && father_countrycode.trim() != '') ? father_countrycode : '',
                                                                                                                                                                                                                                                    father_mobile: (father_mobile && father_mobile.trim() != '') ? father_mobile : '',
                                                                                                                                                                                                                                                    father_country_wise_contact: (father_country_wise_contact) ? JSON.parse(father_country_wise_contact) : {},
                                                                                                                                                                                                                                                    father_email: (father_email && father_email.trim() != '' && father_email != null && father_email != undefined && /^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/.test(father_email)) ? father_email : '',
                                                                                                                                                                                                                                                    father_occupation: father_occupation,
                                                                                                                                                                                                                                                    father_qualification: father_qualification,
                                                                                                                                                                                                                                                    father_address: father_address,
                                                                                                                                                                                                                                                    mother_photo: (motherphoto && motherphoto.trim() != '') ? motherphoto : studentData.mother_photo,
                                                                                                                                                                                                                                                    mother_name: mother_name,
                                                                                                                                                                                                                                                    mother_countrycode: (mother_countrycode && mother_countrycode.trim() != '') ? mother_countrycode : '',
                                                                                                                                                                                                                                                    mother_mobile: (mother_mobile && mother_mobile.trim() != '') ? mother_mobile : '',
                                                                                                                                                                                                                                                    mother_country_wise_contact: (mother_country_wise_contact) ? JSON.parse(mother_country_wise_contact) : {},
                                                                                                                                                                                                                                                    mother_email: (mother_email && mother_email.trim() != '' && mother_email != null && mother_email != undefined && /^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/.test(mother_email)) ? mother_email : '',
                                                                                                                                                                                                                                                    mother_occupation: mother_occupation,
                                                                                                                                                                                                                                                    mother_qualification: mother_qualification,
                                                                                                                                                                                                                                                    mother_address: mother_address,
                                                                                                                                                                                                                                                    student_nationality: student_nationality,
                                                                                                                                                                                                                                                    student_religion: student_religion,
                                                                                                                                                                                                                                                    student_cast: student_cast,
                                                                                                                                                                                                                                                    student_cast_category: student_cast_category,
                                                                                                                                                                                                                                                    student_bank_name: student_bank_name,
                                                                                                                                                                                                                                                    student_bank_branch: student_bank_branch,
                                                                                                                                                                                                                                                    student_bank_accountno: student_bank_accountno,
                                                                                                                                                                                                                                                    student_bank_ifsccode: student_bank_ifsccode,
                                                                                                                                                                                                                                                    student_address: student_address,
                                                                                                                                                                                                                                                    student_pincode: student_pincode,
                                                                                                                                                                                                                                                    student_city: student_city,
                                                                                                                                                                                                                                                    student_state: student_state,
                                                                                                                                                                                                                                                    student_country: student_country,
                                                                                                                                                                                                                                                    app_login_countrycode: app_login_countrycode,
                                                                                                                                                                                                                                                    app_login_mobile: app_login_mobile,
                                                                                                                                                                                                                                                    app_login_country_wise_contact: (app_login_country_wise_contact) ? JSON.parse(app_login_country_wise_contact) : {},
                                                                                                                                                                                                                                                    is_detain: (is_detain === 'true') ? true : false,
                                                                                                                                                                                                                                                    yearly_fee: (checkfeepaid && Array.isArray(checkfeepaid) && checkfeepaid.length > 0) ? studentData.yearly_fee : yearly_fee,
                                                                                                                                                                                                                                                    yearly_transportation: (checkfeepaid && Array.isArray(checkfeepaid) && checkfeepaid.length > 0) ? studentData.yearly_transportation : (yearly_transportation && !(isNaN(yearly_transportation)) && yearly_transportation > 0) ? yearly_transportation : 0,
                                                                                                                                                                                                                                                    payment_structureid: (checkfeepaid && Array.isArray(checkfeepaid) && checkfeepaid.length > 0) ? new mongoose.Types.ObjectId(studentData.payment_structureid) : new mongoose.Types.ObjectId(payment_structureid),
                                                                                                                                                                                                                                                    fee_dates: (checkfeepaid && Array.isArray(checkfeepaid) && checkfeepaid.length > 0) ? studentData.fee_dates : fee_dates,
                                                                                                                                                                                                                                                    feereminderday: reminderday,
                                                                                                                                                                                                                                                    feeremindertimestamp: reminderdaytimestamp,
                                                                                                                                                                                                                                                    academic_startmonth: (checkfeepaid && Array.isArray(checkfeepaid) && checkfeepaid.length > 0) ? studentData.academic_startmonth : academic_startmonth,
                                                                                                                                                                                                                                                    channelID: studentid.toString().toUpperCase() + '_' + app_login_mobile.toString(),
                                                                                                                                                                                                                                                    updatedAtTimestamp: Date.now(),
                                                                                                                                                                                                                                                    updatedBy: new mongoose.Types.ObjectId(req.token.adminId)
                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                                await primary.model(constants.MODELS.students, studentsModel).findByIdAndUpdate(studentid, obj);
                                                                                                                                                                                                                                                let updateStudent = await primary.model(constants.MODELS.students, studentsModel).findById(studentid).lean();
                                                                                                                                                                                                                                                return responseManager.onSuccess('Student updated successfully...', updateStudent, res);
                                                                                                                                                                                                                                            });
                                                                                                                                                                                                                                        } else {
                                                                                                                                                                                                                                            let obj = {
                                                                                                                                                                                                                                                admissionno: admissionno,
                                                                                                                                                                                                                                                admissiondate: admissiondate,
                                                                                                                                                                                                                                                rollno: parseInt(rollno),
                                                                                                                                                                                                                                                branchid: new mongoose.Types.ObjectId(branchid),
                                                                                                                                                                                                                                                mediumid: new mongoose.Types.ObjectId(mediumid),
                                                                                                                                                                                                                                                classid: new mongoose.Types.ObjectId(classid),
                                                                                                                                                                                                                                                enrolled_year: enrolled_year,
                                                                                                                                                                                                                                                student_name: student_name,
                                                                                                                                                                                                                                                student_countrycode: student_countrycode,
                                                                                                                                                                                                                                                student_mobile: student_mobile,
                                                                                                                                                                                                                                                student_country_wise_contact: (student_country_wise_contact) ? JSON.parse(student_country_wise_contact) : {},
                                                                                                                                                                                                                                                student_email: student_email,
                                                                                                                                                                                                                                                password: enPassword,
                                                                                                                                                                                                                                                student_gender: student_gender,
                                                                                                                                                                                                                                                student_dob: student_dob,
                                                                                                                                                                                                                                                student_bloodgroup: student_bloodgroup,
                                                                                                                                                                                                                                                student_hight: student_hight,
                                                                                                                                                                                                                                                student_weight: student_weight,
                                                                                                                                                                                                                                                father_name: father_name,
                                                                                                                                                                                                                                                father_countrycode: (father_countrycode && father_countrycode.trim() != '') ? father_countrycode : '',
                                                                                                                                                                                                                                                father_mobile: (father_mobile && father_mobile.trim() != '') ? father_mobile : '',
                                                                                                                                                                                                                                                father_country_wise_contact: (father_country_wise_contact) ? JSON.parse(father_country_wise_contact) : {},
                                                                                                                                                                                                                                                father_email: (father_email && father_email.trim() != '' && father_email != null && father_email != undefined && /^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/.test(father_email)) ? father_email : '',
                                                                                                                                                                                                                                                father_occupation: father_occupation,
                                                                                                                                                                                                                                                father_qualification: father_qualification,
                                                                                                                                                                                                                                                father_address: father_address,
                                                                                                                                                                                                                                                mother_name: mother_name,
                                                                                                                                                                                                                                                mother_countrycode: (mother_countrycode && mother_countrycode.trim() != '') ? mother_countrycode : '',
                                                                                                                                                                                                                                                mother_mobile: (mother_mobile && mother_mobile.trim() != '') ? mother_mobile : '',
                                                                                                                                                                                                                                                mother_country_wise_contact: (mother_country_wise_contact) ? JSON.parse(mother_country_wise_contact) : {},
                                                                                                                                                                                                                                                mother_email: (mother_email && mother_email.trim() != '' && mother_email != null && mother_email != undefined && /^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/.test(mother_email)) ? mother_email : '',
                                                                                                                                                                                                                                                mother_occupation: mother_occupation,
                                                                                                                                                                                                                                                mother_qualification: mother_qualification,
                                                                                                                                                                                                                                                mother_address: mother_address,
                                                                                                                                                                                                                                                student_nationality: student_nationality,
                                                                                                                                                                                                                                                student_religion: student_religion,
                                                                                                                                                                                                                                                student_cast: student_cast,
                                                                                                                                                                                                                                                student_cast_category: student_cast_category,
                                                                                                                                                                                                                                                student_bank_name: student_bank_name,
                                                                                                                                                                                                                                                student_bank_branch: student_bank_branch,
                                                                                                                                                                                                                                                student_bank_accountno: student_bank_accountno,
                                                                                                                                                                                                                                                student_bank_ifsccode: student_bank_ifsccode,
                                                                                                                                                                                                                                                student_address: student_address,
                                                                                                                                                                                                                                                student_pincode: student_pincode,
                                                                                                                                                                                                                                                student_city: student_city,
                                                                                                                                                                                                                                                student_state: student_state,
                                                                                                                                                                                                                                                student_country: student_country,
                                                                                                                                                                                                                                                app_login_countrycode: app_login_countrycode,
                                                                                                                                                                                                                                                app_login_mobile: app_login_mobile,
                                                                                                                                                                                                                                                app_login_country_wise_contact: (app_login_country_wise_contact) ? JSON.parse(app_login_country_wise_contact) : {},
                                                                                                                                                                                                                                                is_detain: (is_detain === 'true') ? true : false,
                                                                                                                                                                                                                                                yearly_fee: (checkfeepaid && Array.isArray(checkfeepaid) && checkfeepaid.length > 0) ? studentData.yearly_fee : yearly_fee,
                                                                                                                                                                                                                                                yearly_transportation: (checkfeepaid && Array.isArray(checkfeepaid) && checkfeepaid.length > 0) ? studentData.yearly_transportation : (yearly_transportation && !(isNaN(yearly_transportation)) && yearly_transportation > 0) ? yearly_transportation : 0,
                                                                                                                                                                                                                                                payment_structureid: (checkfeepaid && Array.isArray(checkfeepaid) && checkfeepaid.length > 0) ? new mongoose.Types.ObjectId(studentData.payment_structureid) : new mongoose.Types.ObjectId(payment_structureid),
                                                                                                                                                                                                                                                fee_dates: (checkfeepaid && Array.isArray(checkfeepaid) && checkfeepaid.length > 0) ? studentData.fee_dates : fee_dates,
                                                                                                                                                                                                                                                feereminderday: reminderday,
                                                                                                                                                                                                                                                feeremindertimestamp: reminderdaytimestamp,
                                                                                                                                                                                                                                                academic_startmonth: (checkfeepaid && Array.isArray(checkfeepaid) && checkfeepaid.length > 0) ? studentData.academic_startmonth : academic_startmonth,
                                                                                                                                                                                                                                                channelID: studentid.toString().toUpperCase() + '_' + app_login_mobile.toString(),
                                                                                                                                                                                                                                                updatedAtTimestamp: Date.now(),
                                                                                                                                                                                                                                                updatedBy: new mongoose.Types.ObjectId(req.token.adminId)
                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                            await primary.model(constants.MODELS.students, studentsModel).findByIdAndUpdate(studentid, obj);
                                                                                                                                                                                                                                            let updateStudent = await primary.model(constants.MODELS.students, studentsModel).findById(studentid).lean();
                                                                                                                                                                                                                                            return responseManager.onSuccess('Student updated successfully...', updateStudent, res);
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                                        return responseManager.badrequest({ message: 'admission number already exist...!' }, res);
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                } else {
                                                                                                                                                                                                                                    let checkExist = await primary.model(constants.MODELS.students, studentsModel).findOne({ admissionno: admissionno }).lean();
                                                                                                                                                                                                                                    if (checkExist == null) {
                                                                                                                                                                                                                                        let enPassword = await helper.passwordEncryptor(app_login_mobile.toString());
                                                                                                                                                                                                                                        if (req.files) {
                                                                                                                                                                                                                                            let studentphoto = "";
                                                                                                                                                                                                                                            let fatherphoto = "";
                                                                                                                                                                                                                                            let motherphoto = "";
                                                                                                                                                                                                                                            async.forEachSeries(req.files, (file, next_file) => {
                                                                                                                                                                                                                                                (async () => {
                                                                                                                                                                                                                                                    if (file.fieldname == 'studentphoto') {
                                                                                                                                                                                                                                                        if (allowedContentTypes.imagearray.includes(file.mimetype)) {
                                                                                                                                                                                                                                                            let sizeOfImageInMB = parseFloat(parseFloat(file.size) / 1048576);
                                                                                                                                                                                                                                                            if (sizeOfImageInMB <= process.env.MAX_UPLOAD_SIZE_IMAGE) {
                                                                                                                                                                                                                                                                let result = await awsCloud.saveToS3(file.buffer, req.token.adminId.toString(), file.mimetype, 'Students');
                                                                                                                                                                                                                                                                studentphoto += result.data.Key;
                                                                                                                                                                                                                                                                next_file();
                                                                                                                                                                                                                                                            } else {
                                                                                                                                                                                                                                                                return responseManager.badrequest({ message: 'file must be less then or equal ' + process.env.MAX_UPLOAD_SIZE_IMAGE + 'MB, please try again...!' }, res);
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                        } else {
                                                                                                                                                                                                                                                            return responseManager.badrequest({ message: 'Only image file allow...!' }, res);
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                    } else if (file.fieldname == 'fatherphoto') {
                                                                                                                                                                                                                                                        if (allowedContentTypes.imagearray.includes(file.mimetype)) {
                                                                                                                                                                                                                                                            let sizeOfImageInMB = parseFloat(parseFloat(file.size) / 1048576);
                                                                                                                                                                                                                                                            if (sizeOfImageInMB <= process.env.MAX_UPLOAD_SIZE_IMAGE) {
                                                                                                                                                                                                                                                                let result = await awsCloud.saveToS3(file.buffer, req.token.adminId.toString(), file.mimetype, 'Students');
                                                                                                                                                                                                                                                                fatherphoto += result.data.Key;
                                                                                                                                                                                                                                                                next_file();
                                                                                                                                                                                                                                                            } else {
                                                                                                                                                                                                                                                                return responseManager.badrequest({ message: 'file must be less then or equal ' + process.env.MAX_UPLOAD_SIZE_IMAGE + 'MB, please try again...!' }, res);
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                        } else {
                                                                                                                                                                                                                                                            return responseManager.badrequest({ message: 'Only image file allow...!' }, res);
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                    } else if (file.fieldname == 'motherphoto') {
                                                                                                                                                                                                                                                        if (allowedContentTypes.imagearray.includes(file.mimetype)) {
                                                                                                                                                                                                                                                            let sizeOfImageInMB = parseFloat(parseFloat(file.size) / 1048576);
                                                                                                                                                                                                                                                            if (sizeOfImageInMB <= process.env.MAX_UPLOAD_SIZE_IMAGE) {
                                                                                                                                                                                                                                                                let result = await awsCloud.saveToS3(file.buffer, req.token.adminId.toString(), file.mimetype, 'Students');
                                                                                                                                                                                                                                                                motherphoto += result.data.Key;
                                                                                                                                                                                                                                                                next_file();
                                                                                                                                                                                                                                                            } else {
                                                                                                                                                                                                                                                                return responseManager.badrequest({ message: 'file must be less then or equal ' + process.env.MAX_UPLOAD_SIZE_IMAGE + 'MB, please try again...!' }, res);
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                        } else {
                                                                                                                                                                                                                                                            return responseManager.badrequest({ message: 'Only image file allow...!' }, res);
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                })().catch((error) => {
                                                                                                                                                                                                                                                    return responseManager.onError(error, res);
                                                                                                                                                                                                                                                });
                                                                                                                                                                                                                                            }, async () => {
                                                                                                                                                                                                                                                let obj = {
                                                                                                                                                                                                                                                    student_profile: studentphoto,
                                                                                                                                                                                                                                                    admissionno: admissionno,
                                                                                                                                                                                                                                                    admissiondate: admissiondate,
                                                                                                                                                                                                                                                    rollno: parseInt(rollno),
                                                                                                                                                                                                                                                    branchid: new mongoose.Types.ObjectId(branchid),
                                                                                                                                                                                                                                                    mediumid: new mongoose.Types.ObjectId(mediumid),
                                                                                                                                                                                                                                                    classid: new mongoose.Types.ObjectId(classid),
                                                                                                                                                                                                                                                    enrolled_year: enrolled_year,
                                                                                                                                                                                                                                                    student_name: student_name,
                                                                                                                                                                                                                                                    student_countrycode: student_countrycode,
                                                                                                                                                                                                                                                    student_mobile: student_mobile,
                                                                                                                                                                                                                                                    student_country_wise_contact: (student_country_wise_contact) ? JSON.parse(student_country_wise_contact) : {},
                                                                                                                                                                                                                                                    student_email: student_email,
                                                                                                                                                                                                                                                    password: enPassword,
                                                                                                                                                                                                                                                    student_gender: student_gender,
                                                                                                                                                                                                                                                    student_dob: student_dob,
                                                                                                                                                                                                                                                    student_bloodgroup: student_bloodgroup,
                                                                                                                                                                                                                                                    student_hight: student_hight,
                                                                                                                                                                                                                                                    student_weight: student_weight,
                                                                                                                                                                                                                                                    father_photo: fatherphoto,
                                                                                                                                                                                                                                                    father_name: father_name,
                                                                                                                                                                                                                                                    father_countrycode: (father_countrycode && father_countrycode.trim() != '') ? father_countrycode : '',
                                                                                                                                                                                                                                                    father_mobile: (father_mobile && father_mobile.trim() != '') ? father_mobile : '',
                                                                                                                                                                                                                                                    father_country_wise_contact: (father_country_wise_contact) ? JSON.parse(father_country_wise_contact) : {},
                                                                                                                                                                                                                                                    father_email: (father_email && father_email.trim() != '' && father_email != null && father_email != undefined && /^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/.test(father_email)) ? father_email : '',
                                                                                                                                                                                                                                                    father_occupation: father_occupation,
                                                                                                                                                                                                                                                    father_qualification: father_qualification,
                                                                                                                                                                                                                                                    father_address: father_address,
                                                                                                                                                                                                                                                    mother_photo: motherphoto,
                                                                                                                                                                                                                                                    mother_name: mother_name,
                                                                                                                                                                                                                                                    mother_countrycode: (mother_countrycode && mother_countrycode.trim() != '') ? mother_countrycode : '',
                                                                                                                                                                                                                                                    mother_mobile: (mother_mobile && mother_mobile.trim() != '') ? mother_mobile : '',
                                                                                                                                                                                                                                                    mother_country_wise_contact: (mother_country_wise_contact) ? JSON.parse(mother_country_wise_contact) : {},
                                                                                                                                                                                                                                                    mother_email: (mother_email && mother_email.trim() != '' && mother_email != null && mother_email != undefined && /^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/.test(mother_email)) ? mother_email : '',
                                                                                                                                                                                                                                                    mother_occupation: mother_occupation,
                                                                                                                                                                                                                                                    mother_qualification: mother_qualification,
                                                                                                                                                                                                                                                    mother_address: mother_address,
                                                                                                                                                                                                                                                    student_nationality: student_nationality,
                                                                                                                                                                                                                                                    student_religion: student_religion,
                                                                                                                                                                                                                                                    student_cast: student_cast,
                                                                                                                                                                                                                                                    student_cast_category: student_cast_category,
                                                                                                                                                                                                                                                    student_bank_name: student_bank_name,
                                                                                                                                                                                                                                                    student_bank_branch: student_bank_branch,
                                                                                                                                                                                                                                                    student_bank_accountno: student_bank_accountno,
                                                                                                                                                                                                                                                    student_bank_ifsccode: student_bank_ifsccode,
                                                                                                                                                                                                                                                    student_address: student_address,
                                                                                                                                                                                                                                                    student_pincode: student_pincode,
                                                                                                                                                                                                                                                    student_city: student_city,
                                                                                                                                                                                                                                                    student_state: student_state,
                                                                                                                                                                                                                                                    student_country: student_country,
                                                                                                                                                                                                                                                    app_login_countrycode: app_login_countrycode,
                                                                                                                                                                                                                                                    app_login_mobile: app_login_mobile,
                                                                                                                                                                                                                                                    app_login_country_wise_contact: (app_login_country_wise_contact) ? JSON.parse(app_login_country_wise_contact) : {},
                                                                                                                                                                                                                                                    is_detain: (is_detain === 'true') ? true : false,
                                                                                                                                                                                                                                                    yearly_fee: yearly_fee,
                                                                                                                                                                                                                                                    yearly_transportation: (yearly_transportation && !(isNaN(yearly_transportation)) && yearly_transportation > 0) ? yearly_transportation : 0,
                                                                                                                                                                                                                                                    payment_structureid: new mongoose.Types.ObjectId(payment_structureid),
                                                                                                                                                                                                                                                    fee_dates: fee_dates,
                                                                                                                                                                                                                                                    feereminderday: reminderday,
                                                                                                                                                                                                                                                    feeremindertimestamp: reminderdaytimestamp,
                                                                                                                                                                                                                                                    academic_startmonth: academic_startmonth,
                                                                                                                                                                                                                                                    createdAtTimestamp: Date.now(),
                                                                                                                                                                                                                                                    updatedAtTimestamp: Date.now(),
                                                                                                                                                                                                                                                    createdBy: new mongoose.Types.ObjectId(req.token.adminId),
                                                                                                                                                                                                                                                    updatedBy: new mongoose.Types.ObjectId(req.token.adminId)
                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                                let newStudent = await primary.model(constants.MODELS.students, studentsModel).create(obj);
                                                                                                                                                                                                                                                await primary.model(constants.MODELS.students, studentsModel).findByIdAndUpdate(newStudent._id, { channelID: newStudent._id.toString().toUpperCase() + '_' + newStudent.app_login_mobile.toString() });
                                                                                                                                                                                                                                                let update = await primary.model(constants.MODELS.students, studentsModel).findById(newStudent._id).lean();
                                                                                                                                                                                                                                                return responseManager.onSuccess('Student created successfully...', update, res);
                                                                                                                                                                                                                                            });
                                                                                                                                                                                                                                        } else {
                                                                                                                                                                                                                                            return responseManager.badrequest({ message: 'Please select image...!' }, res);
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                                        return responseManager.badrequest({ message: 'admission number already exist...!' }, res);
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            } else {
                                                                                                                                                                                                                                return responseManager.badrequest({ message: 'Invalid student detain status...!' }, res);
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                        } else {
                                                                                                                                                                                                                            return responseManager.badrequest({ message: 'Invalid student academic start month...!' }, res);
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                        return responseManager.badrequest({ message: 'Invalid student fee dates...!' }, res);
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                } else {
                                                                                                                                                                                                                    return responseManager.badrequest({ message: 'Invalid student fee dates...!' }, res);
                                                                                                                                                                                                                }
                                                                                                                                                                                                            } else {
                                                                                                                                                                                                                return responseManager.badrequest({ message: 'Invalid student fee payment structure...!' }, res);
                                                                                                                                                                                                            }
                                                                                                                                                                                                        } else {
                                                                                                                                                                                                            return responseManager.badrequest({ message: 'Invalid student yearly fee...!' }, res);
                                                                                                                                                                                                        }
                                                                                                                                                                                                    } else {
                                                                                                                                                                                                        return responseManager.badrequest({ message: 'Invalid student login portal mobile number...!' }, res);
                                                                                                                                                                                                    }
                                                                                                                                                                                                } else {
                                                                                                                                                                                                    return responseManager.badrequest({ message: 'Invalid student login portal country code...!' }, res);
                                                                                                                                                                                                }
                                                                                                                                                                                            } else {
                                                                                                                                                                                                return responseManager.badrequest({ message: 'Invalid student country...!' }, res);
                                                                                                                                                                                            }
                                                                                                                                                                                        } else {
                                                                                                                                                                                            return responseManager.badrequest({ message: 'Invalid student state...!' }, res);
                                                                                                                                                                                        }
                                                                                                                                                                                    } else {
                                                                                                                                                                                        return responseManager.badrequest({ message: 'Invalid student city...!' }, res);
                                                                                                                                                                                    }
                                                                                                                                                                                } else {
                                                                                                                                                                                    return responseManager.badrequest({ message: 'Invalid student pincode...!' }, res);
                                                                                                                                                                                }
                                                                                                                                                                            } else {
                                                                                                                                                                                return responseManager.badrequest({ message: 'Invalid student address...!' }, res);
                                                                                                                                                                            }
                                                                                                                                                                        } else {
                                                                                                                                                                            return responseManager.badrequest({ message: 'Invalid student bank IFSC code...!' }, res);
                                                                                                                                                                        }
                                                                                                                                                                    } else {
                                                                                                                                                                        return responseManager.badrequest({ message: 'Invalid student bank account number...!' }, res);
                                                                                                                                                                    }
                                                                                                                                                                } else {
                                                                                                                                                                    return responseManager.badrequest({ message: 'Invalid student bank branch...!' }, res);
                                                                                                                                                                }
                                                                                                                                                            } else {
                                                                                                                                                                return responseManager.badrequest({ message: 'Invalid student bank name...!' }, res);
                                                                                                                                                            }
                                                                                                                                                        } else {
                                                                                                                                                            return responseManager.badrequest({ message: 'Invalid student cast category...!' }, res);
                                                                                                                                                        }
                                                                                                                                                    } else {
                                                                                                                                                        return responseManager.badrequest({ message: 'Invalid student cast...!' }, res);
                                                                                                                                                    }
                                                                                                                                                } else {
                                                                                                                                                    return responseManager.badrequest({ message: 'Invalid student religion...!' }, res);
                                                                                                                                                }
                                                                                                                                            } else {
                                                                                                                                                return responseManager.badrequest({ message: 'Invalid student nationality...!' }, res);
                                                                                                                                            }
                                                                                                                                        } else {
                                                                                                                                            return responseManager.badrequest({ message: 'Invalid mother address...!' }, res);
                                                                                                                                        }
                                                                                                                                    } else {
                                                                                                                                        return responseManager.badrequest({ message: 'Invalid mother_qualification...!' }, res);
                                                                                                                                    }
                                                                                                                                } else {
                                                                                                                                    return responseManager.badrequest({ message: 'Invalid mother occupation...!' }, res);
                                                                                                                                }
                                                                                                                            } else {
                                                                                                                                return responseManager.badrequest({ message: 'Invalid mother email...!' }, res);
                                                                                                                            }
                                                                                                                        } else {
                                                                                                                            return responseManager.badrequest({ message: 'Invalid mother mobile number...!' }, res);
                                                                                                                        }
                                                                                                                    } else {
                                                                                                                        return responseManager.badrequest({ message: 'Invalid mother country code...!' }, res);
                                                                                                                    }
                                                                                                                } else {
                                                                                                                    return responseManager.badrequest({ message: 'Invalid mother name...!' }, res);
                                                                                                                }
                                                                                                            } else {
                                                                                                                return responseManager.badrequest({ message: 'Invalid father address...!' }, res);
                                                                                                            }
                                                                                                        } else {
                                                                                                            return responseManager.badrequest({ message: 'Invalid father qualification...!' }, res);
                                                                                                        }
                                                                                                    } else {
                                                                                                        return responseManager.badrequest({ message: 'Invalid father occupation...!' }, res);
                                                                                                    }
                                                                                                } else {
                                                                                                    return responseManager.badrequest({ message: 'Invalid father email...!' }, res);
                                                                                                }
                                                                                            } else {
                                                                                                return responseManager.badrequest({ message: 'Invalid father mobile...!' }, res);
                                                                                            }
                                                                                        } else {
                                                                                            return responseManager.badrequest({ message: 'Invalid father country code...!' }, res);
                                                                                        }
                                                                                    } else {
                                                                                        return responseManager.badrequest({ message: 'Invalid father name...!' }, res);
                                                                                    }
                                                                                } else {
                                                                                    return responseManager.badrequest({ message: 'Invalid student weight...!' }, res);
                                                                                }
                                                                            } else {
                                                                                return responseManager.badrequest({ message: 'Invalid student hight...!' }, res);
                                                                            }
                                                                        } else {
                                                                            return responseManager.badrequest({ message: 'Invalid student blood group...!' }, res);
                                                                        }
                                                                    } else {
                                                                        return responseManager.badrequest({ message: 'Invalid student birth date...!' }, res);
                                                                    }
                                                                } else {
                                                                    return responseManager.badrequest({ message: 'Invalid student gender...!' }, res);
                                                                }
                                                            } else {
                                                                return responseManager.badrequest({ message: 'Invalid student email...!' }, res);
                                                            }
                                                        } else {
                                                            return responseManager.badrequest({ message: 'Invalid student mobile number...!' }, res);
                                                        }
                                                    } else {
                                                        return responseManager.badrequest({ message: 'Invalid student country code...!' }, res);
                                                    }
                                                } else {
                                                    return responseManager.badrequest({ message: 'Invalid student name...!' }, res);
                                                }
                                            } else {
                                                return responseManager.badrequest({ message: 'Invalid enrolled year...!' }, res);
                                            }
                                        } else {
                                            return responseManager.badrequest({ message: 'Invalid class...!' }, res);
                                        }
                                    } else {
                                        return responseManager.badrequest({ message: 'Invalid medium...!' }, res);
                                    }
                                } else {
                                    return responseManager.badrequest({ message: 'Invalid branch id...!' }, res);
                                }
                            } else {
                                return responseManager.badrequest({ message: 'Invalid roll number...!' }, res);
                            }
                        } else {
                            return responseManager.badrequest({ message: 'Invalid admission date...!' }, res);
                        }
                    } else {
                        return responseManager.badrequest({ message: 'Invalid admission number...!' }, res);
                    }
                } else {
                    return responseManager.accessDenied(res);
                }
            } else {
                return responseManager.unauthorisedRequest(res);
            }
        } else {
            return responseManager.unauthorisedRequest(res);
        }
    } else {
        return responseManager.unauthorisedRequest(res);
    }
};